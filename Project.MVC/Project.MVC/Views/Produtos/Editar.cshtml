@model Project.Application.ViewModels.ProdutoViewModel
@{
    ViewBag.Title = string.Format("Editar Produto {0} - Quero Trocar!", Model.Nome);
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}
@section Styles {
    @Styles.Render("~/StoreContent/file-input/css")
}
<div class="container main-container headerOffset">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-lg-offset-1">
                <div class="panel panel-default ">
                    <div id="collapse1" class="panel-collapse collapse in">
                        <div class="panel-body">
                            @using (Html.BeginForm("Editar", "Produtos", FormMethod.Post, new { @class = "form-horizontal", @id = "Produto-Form" }))
                            {
                                @Html.HiddenFor(model => model.ProdutoId)
                                <fieldset>
                                    <legend style="text-align:center;">Editar produto @Model.Nome</legend>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nome, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control input-md", @placeholder = "Nome do produto" })
                                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Descricao, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-7">
                                            @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", @placeholder = "Descrição", @style = "max-witdh: 450px;", @rows = "2" })
                                            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Detalhes, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-7">
                                            @Html.TextAreaFor(model => model.Detalhes, new { @class = "form-control", @placeholder = "Detalhes", @style = "max-witdh: 450px;", @rows = "6" })
                                            @Html.ValidationMessageFor(model => model.Detalhes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Categoria", new { @class = "col-md-4 control-label", @name = "CategoriaId" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.CategoriaId, (IEnumerable<SelectListItem>)ViewBag.Categorias, string.Empty, new { @class = "form-control", @tabindex = "-1", @onchange = "CarregarSubCategorias();" })
                                            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SubCategoriaId, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-4">
                                            @Html.DropDownList("SubCategoriaId", (IEnumerable<SelectListItem>)ViewBag.SubCategorias, string.Empty, new { @class = "form-control", @tabindex = "-1" })
                                            @Html.ValidationMessageFor(model => model.SubCategoriaId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </fieldset>
                                <div class="col-md-12 text-center">
                                    <a class="btn btn-info" href="@Url.Action("Index", "Produtos")"> <span class="add2cart"> Voltar </span> </a>
                                    <button type="submit" class="btn btn-danger" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Aguarde">Salvar Alterações</button>
                                </div>
                            }
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                <input id="imagem" name="imagem" class="file" type="file" multiple data-preview-file-type="any" data-upload-url="@Url.Action("NovaImagem", "Produtos")">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/unobstrusive")
    @Scripts.Render("~/StoreContent/necessary/script")
    @Scripts.Render("~/StoreContent/file-input/script")
}
@section InternalScripts{
    <script>

        function CarregarSubCategorias() {
            var categoriaId = $("#CategoriaId").val();
            $.get("/Produtos/BuscarSubCategorias", { categoriaId: categoriaId }, function (data) {
                var htmlContent = "";
                $(data).each(function (index, value) {
                    htmlContent += "<option value=\"" + value.SubCategoriaId + "\">" + value.Nome + "</option>";
                });
                $("#SubCategoriaId").html(htmlContent);
            });
        }

        $('#imagem').fileinput({
            language: 'pt-BR',
            allowedFileExtensions: ['jpg', 'png', 'jpeg'],
            showCancel: false,
            maxFileCount: 4,
            validateInitialCount : true,
            overwriteInitial: false,
            initialPreviewAsData: true,
            uploadExtraData: { produtoId: @Model.ProdutoId },
            initialPreview: [
                @foreach (var imagem in Model.ProdutoImagemViewModels)
                {
                    var path = imagem.Caminho;
                    @:'@Url.Content(path)',
                }  
            ],
            initialPreviewConfig: [
                @foreach (var imagem in Model.ProdutoImagemViewModels)
                {
                    @:{ url: "@Url.Action("RemoverImagem", "Produtos")", key: @imagem.ProdutoImagemId },
                }
            ],
        })
        .on('fileuploaded', function(event, data, previewId, index) {
            $('div.file-preview-thumbnails #'+previewId).attr('server_id',data.response.server_id)
        });

    </script>
}
