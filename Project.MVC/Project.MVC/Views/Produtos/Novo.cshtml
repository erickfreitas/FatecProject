@model Project.Application.ViewModels.ProdutoViewModel
@{
    ViewBag.Title = "Cadastrar novo Produto - Quero Trocar!";
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}
@section Styles {
    @Styles.Render("~/StoreContent/file-input/css")
}
<div class="container main-container headerOffset">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-lg-offset-1">
                <div class="panel panel-default ">
                    <div id="collapse1" class="panel-collapse collapse in">
                        <div class="panel-body">
                            @using (Ajax.BeginForm("Novo", "Produtos", new AjaxOptions { OnBegin = "DesabilitarForm()", OnFailure = "console.log(data)", OnSuccess = "CarregarModal(data), console.log(data);", UpdateTargetId = "collapse1", InsertionMode = InsertionMode.InsertAfter, HttpMethod = "Post" }, new { @class = "form-horizontal", @id = "Produto-Form" }))
                            {
                                <fieldset>
                                    <legend style="text-align:center;">Cadastrar novo produto</legend>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nome, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(model => model.Nome, new { @class = "form-control input-md", @placeholder = "Nome do produto" })
                                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Descricao, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-7">
                                            @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control", @placeholder = "Descrição", @style = "max-witdh: 450px;", @rows = "2" })
                                            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Detalhes, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-7">
                                            @Html.TextAreaFor(model => model.Detalhes, new { @class = "form-control", @placeholder = "Detalhes", @style = "max-witdh: 450px;", @rows = "6" })
                                            @Html.ValidationMessageFor(model => model.Detalhes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Categoria", new { @class = "col-md-4 control-label" })
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.CategoriaId, (IEnumerable<SelectListItem>)ViewBag.Categorias, string.Empty, new { @class = "form-control", @tabindex = "-1", @onchange = "CarregarSubCategorias();" })
                                            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SubCategoriaId, new { @class = "col-md-4 control-label" })
                                        <div class="col-md-4">
                                            @Html.DropDownList("SubCategoriaId", (IEnumerable<SelectListItem>)ViewBag.SubCategorias, string.Empty, new { @class = "form-control", @tabindex = "-1" })
                                            @Html.ValidationMessageFor(model => model.SubCategoriaId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>                                    
                                </fieldset>
                                <div class="col-md-12 text-center">
                                    <a class="btn btn-default" href="@Url.Action("MeusProdutos", "Produtos")"> <span class="add2cart"> Voltar </span> </a>
                                    <button type="submit" class="btn btn-primary" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Aguarde">Cadastrar</button>
                                </div>
                            }                                                   
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section modals{
    @Html.Partial("_ModalProdutoImagens")    
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/unobstrusive")
    @Scripts.Render("~/StoreContent/necessary/script")
    @Scripts.Render("~/StoreContent/file-input/script")
}
@section InternalScripts{
    <script>
        $('#imagem').fileinput({
            language: 'pt-BR',
            allowedFileExtensions: ['jpg', 'png', 'jpeg'],
            showCancel : false,
            fileActionSettings: { showUpload: false },
            maxFileCount: 4,
        });

        $('#imagem').on('filebatchuploadcomplete', function (event, files, extra) {
            setTimeout(function () {
                $('#CadastrarImagens').modal("hide");
                $('#Produto-Form button').attr('disabled', 'disabled');
            }, 1500);
            setTimeout(function () { window.location.replace("/Produtos/MeusProdutos"); }, 3000);
        });

        function CarregarSubCategorias() {
            var categoriaId = $("#CategoriaId").val();
            $.get("/Produtos/BuscarSubCategorias", { categoriaId: categoriaId }, function (data) {
                var htmlContent = "";
                $(data).each(function (index, value) {
                    htmlContent += "<option value=\"" + value.SubCategoriaId + "\">" + value.Nome + "</option>";
                });
                $("#SubCategoriaId").html(htmlContent);
            });
        }

        function DesabilitarForm() {
            $("#Produto-Form input").prop("disabled", true);
            $("#Produto-Form select").prop("disabled", true);
            $("#Produto-Form textarea").prop("disabled", true);
            $('#Produto-Form button').button("loading");
        }

        function CarregarModal(produto) {            
            $('#Produto-Form button').button("reset");            
            $('#imagem').fileinput('refresh', { uploadExtraData: { produtoId: produto.ProdutoId } });
            $('#CadastrarImagens').modal(({ backdrop: 'static', keyboard: false }));
        }

    </script>
}